openapi: 3.0.3

info:
  title: RBA interview Rest API
  description: Simple application for RBA interview.
  version: 1.0.0
servers:
  - url: 'http://localhost:8080'

paths:
  /api/person:
    post:
      tags:
        - person
      operationId: createPerson
      description: Create new person.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonForm'
      responses:
        '200':
          description: Successfully created new person.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDto'
        '400':
          description: Bad request
        '500':
          description: Server error

  /api/person/{oib}:
    get:
      tags:
        - person
      operationId: getPerson
      description: Get person by OIB.
      parameters:
        - in: path
          name: oib
          required: true
          schema:
            type: string
            minLength: 11
            maxLength: 11
      responses:
        '200':
          description: Successfully fetched person.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDto'
        '400':
          description: Bad request
        '500':
          description: Server error

    delete:
      tags:
        - person
      operationId: deletePerson
      description: Delete person by OIB.
      parameters:
        - in: path
          name: oib
          required: true
          schema:
            type: string
            minLength: 11
            maxLength: 11
      responses:
        '200':
          description: Successfully deleted person.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /api/person/status:
    post:
      tags:
        - person
      operationId: updatePersonStatus
      description: Update person status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonStatusForm'
      responses:
        '200':
          description: Successfully updated person status.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '500':
          description: Server error

  /api/document/status:
    post:
      tags:
        - document
      operationId: updateDocumentStatus
      description: Update document status.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentStatusForm'
      responses:
        '200':
          description: Successfully updated document status.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Bad request
        '500':
          description: Server error

components:
  schemas:
    CodebookDto:
      type: object
      properties:
        key:
          type: integer
          format: int64
        value:
          type: string

    PersonForm:
      type: object
      properties:
        oib:
          type: string
          minLength: 11
          maxLength: 11
        firstName:
          type: string
        lastName:
          type: string
      required:
        - oib
        - firstName
        - lastName

    PersonDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        oib:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        status:
          $ref: '#/components/schemas/CodebookDto'

    DocumentStatusForm:
      type: object
      properties:
        oib:
          type: string
          minLength: 11
          maxLength: 11
        statusId:
          type: integer
          format: int64
      required:
        - oib
        - statusId

    PersonStatusForm:
      type: object
      properties:
        oib:
          type: string
          minLength: 11
          maxLength: 11
        statusId:
          type: integer
          format: int64
      required:
        - oib
        - statusId
